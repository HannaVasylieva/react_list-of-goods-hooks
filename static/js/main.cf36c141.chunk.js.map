{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortFeild","setSortFeild","sortReverse","setSortReverse","finalGoods","goods","sortType","isReversed","prepearedGoods","sort","good1","good2","Length","length","Alph","localeCompare","reverse","getPrepearedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,iBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EA9BR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAc,YAAOH,GAmB3B,OAjBAG,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQL,GACN,KAAKV,EAASgB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKjB,EAASkB,KACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITJ,GACFC,EAAeQ,UAGVR,EAMYS,CAAkBpB,EAAiBG,EAAWE,GAMjE,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAcJ,EAASkB,OAEvCO,QAAS,WACPpB,EAAaL,EAASkB,OAP1B,iCAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAcJ,EAASgB,SAEvCS,QAAS,WACPpB,EAAaL,EAASgB,SAP1B,4BAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,WACPlB,GAAgBD,IAPpB,sBAagB,KAAdF,GAAoBE,IACpB,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAnDQ,WAChBpB,EAAa,IACbE,GAAe,IA8CT,sBAUJ,6BACGC,EAAWkB,KAAI,SAAAC,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf36c141.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alph = 'alph',\n  Length = 'length',\n}\n\nfunction getPrepearedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  const prepearedGoods = [...goods];\n\n  prepearedGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.Length:\n        return good1.length - good2.length;\n\n      case SortType.Alph:\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortFeild, setSortFeild] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const finalGoods = getPrepearedGoods(goodsFromServer, sortFeild, sortReverse);\n  const resetSort = () => {\n    setSortFeild('');\n    setSortReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortFeild !== SortType.Alph },\n          )}\n          onClick={() => {\n            setSortFeild(SortType.Alph);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortFeild !== SortType.Length },\n          )}\n          onClick={() => {\n            setSortFeild(SortType.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !sortReverse },\n          )}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortFeild !== '' || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSort}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {finalGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}